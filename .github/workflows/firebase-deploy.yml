# Name des GitHub-Workflows
name: Deploy to Firebase Hosting on merge

# Legt fest, wann der Workflow ausgeführt wird
on:
  push:
    branches:
      - main  # Löst den Workflow bei einem Push in den main-Branch aus

# Definiert die auszuführenden Jobs
jobs:
  build_and_deploy:
    # Der Typ des Runners, auf dem der Job ausgeführt wird
    runs-on: ubuntu-latest
    
    # Die Schritte, die im Job ausgeführt werden
    steps:
      # 1. Schritt: Code aus dem Repository auschecken
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Schritt (Optional): Node.js einrichten, falls für den Build-Prozess benötigt
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Passen Sie die Node.js-Version nach Bedarf an

      # 3. Schritt (Optional): Abhängigkeiten installieren und die App bauen
      - name: Install dependencies and build
        run: |
          npm install
          npm run build # Ersetzen Sie dies durch Ihren tatsächlichen Build-Befehl

      # 4. Schritt: Auf Firebase Hosting bereitstellen
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}' # Token für die Interaktion mit GitHub
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_BIZFLOW }}' # Service-Account-Schlüssel als Secret
          channelId: live # Auf den Live-Kanal bereitstellen
          projectId: 'studio-601763151-65544' # Ersetzen Sie dies durch Ihre Firebase-Projekt-ID
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels # Erforderlich für die Verwendung von Hosting-Kanälen
